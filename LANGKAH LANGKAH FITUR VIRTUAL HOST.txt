LANGKAH LANGKAH FITUR VIRTUAL HOST
Berikut adalah langkah-langkah untuk **Konfigurasi Virtual Host** di Nginx:

---

### **1. Apa itu Virtual Host?**
**Virtual Host** memungkinkan Anda menjalankan beberapa aplikasi web pada satu server dengan domain atau subdomain yang berbeda. Misalnya:
- `app1.example.com` ‚Üí `/var/www/app1`
- `app2.example.com` ‚Üí `/var/www/app2`

---

### **2. Struktur Direktori Virtual Host**
Pastikan setiap aplikasi web memiliki direktori root terpisah:
```bash
/var/www/app1
/var/www/app2
```

Buat direktori ini jika belum ada:
```bash
sudo mkdir -p /var/www/app1
sudo mkdir -p /var/www/app2
```

Berikan izin yang sesuai:
```bash
sudo chown -R $USER:$USER /var/www/app1
sudo chown -R $USER:$USER /var/www/app2
```

Tambahkan file `index.html` sederhana untuk setiap aplikasi:
```bash
echo "<h1>Welcome to App 1</h1>" > /var/www/app1/index.html
echo "<h1>Welcome to App 2</h1>" > /var/www/app2/index.html
```

---

### **3. Konfigurasi Virtual Host di Nginx**

#### **Langkah 1: Buat File Konfigurasi Virtual Host**
File konfigurasi Virtual Host biasanya berada di `/etc/nginx/sites-available/`.

Contoh untuk `app1.example.com`:
```bash
sudo nano /etc/nginx/sites-available/app1
```

Isi file:
```nginx
server {
    listen 80;
    server_name app1.example.com;

    root /var/www/app1;
    index index.html;

    location / {
        try_files $uri $uri/ =404;
    }
}
```

Contoh untuk `app2.example.com`:
```bash
sudo nano /etc/nginx/sites-available/app2
```

Isi file:
```nginx
server {
    listen 80;
    server_name app2.example.com;

    root /var/www/app2;
    index index.html;

    location / {
        try_files $uri $uri/ =404;
    }
}
```

#### **Langkah 2: Aktifkan Virtual Host**
Aktifkan Virtual Host dengan membuat symlink ke direktori `sites-enabled`:
```bash
sudo ln -s /etc/nginx/sites-available/app1 /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/app2 /etc/nginx/sites-enabled/
```

#### **Langkah 3: Hapus Konfigurasi Default (Opsional)**
Jika ingin menghapus konfigurasi default:
```bash
sudo rm /etc/nginx/sites-enabled/default
```

#### **Langkah 4: Uji Konfigurasi**
Periksa apakah konfigurasi Nginx sudah benar:
```bash
sudo nginx -t
```

Jika konfigurasi valid, Anda akan melihat pesan seperti:
```text
nginx: configuration file /etc/nginx/nginx.conf test is successful
```

#### **Langkah 5: Restart Nginx**
Restart Nginx untuk menerapkan perubahan:
```bash
sudo systemctl restart nginx
```

---

### **4. Tambahkan Hostname ke `/etc/hosts`**
Jika Anda menguji secara lokal tanpa domain, tambahkan entri ke file `/etc/hosts` pada komputer klien untuk memetakan domain ke IP server:
```bash
sudo nano /etc/hosts
```

Tambahkan baris:
```text
192.168.4.3 app1.example.com
192.168.4.3 app2.example.com
```

Gantilah `192.168.4.3` dengan IP server Anda.

---

### **5. Akses Virtual Host**
- Buka browser dan akses:
  - `http://app1.example.com`
  - `http://app2.example.com`

---

### **6. Validasi Konfigurasi**
Jika halaman tidak tampil:
1. Periksa log Nginx:
   ```bash
   sudo tail -n 20 /var/log/nginx/error.log
   ```
2. Pastikan domain mengarah ke IP server:
   ```bash
   ping app1.example.com
   ```

---

### **Tambahan: Implementasi di Bot Telegram**
Anda dapat menambahkan fitur pada bot Telegram untuk:
1. **Menampilkan Daftar Virtual Host Aktif**
   ```python
   @bot.message_handler(commands=['virtual_hosts'])
   def virtual_hosts(message):
       try:
           sites = os.listdir('/etc/nginx/sites-enabled/')
           bot.reply_to(message, "üìÅ Virtual Hosts Aktif:\n" + '\n'.join(sites))
       except Exception as e:
           bot.reply_to(message, f"Error membaca Virtual Hosts: {e}")
   ```

2. **Menambahkan Virtual Host Baru**
   Misalnya, bot menerima input dari pengguna untuk membuat konfigurasi Virtual Host baru.

---

Jika ada kendala dalam langkah-langkah ini, beri tahu saya untuk membantu lebih lanjut! üòä


FITUR MENAMBAHKAN VIRTUAL HOST, MENGAKTIFKAN DAN MEMATIKAN NYA
Berikut adalah langkah-langkah untuk menambahkan fitur di bot Telegram Anda agar bisa **menambahkan Virtual Host baru**, serta **mengaktifkan** atau **menonaktifkan** Virtual Host:

---

### **1. Struktur Direktori**
Pastikan direktori untuk konfigurasi Virtual Host sudah ada:
- `/etc/nginx/sites-available/`
- `/etc/nginx/sites-enabled/`

---

### **2. Menambahkan Fitur untuk Menambah Virtual Host**
Fitur ini akan menerima nama domain, root path, dan membuat file konfigurasi baru.

#### **Kode**
Tambahkan handler di bot:
```python
@bot.message_handler(commands=['add_vhost'])
def add_vhost(message):
    bot.reply_to(message, "Silakan masukkan detail Virtual Host dalam format berikut:\n\n`domain root_path`\n\nContoh:\n`app1.example.com /var/www/app1`", parse_mode="Markdown")
    
@bot.message_handler(func=lambda message: len(message.text.split()) == 2 and message.text.startswith("app"))
def create_vhost(message):
    try:
        domain, root_path = message.text.split()
        
        # Buat file konfigurasi
        config_path = f"/etc/nginx/sites-available/{domain}"
        config_content = f"""
server {{
    listen 80;
    server_name {domain};

    root {root_path};
    index index.html;

    location / {{
        try_files $uri $uri/ =404;
    }}
}}
"""
        # Tulis file konfigurasi
        with open(config_path, 'w') as file:
            file.write(config_content)
        
        # Aktifkan Virtual Host
        os.symlink(config_path, f"/etc/nginx/sites-enabled/{domain}")
        
        # Restart Nginx
        os.system("sudo systemctl restart nginx")
        
        bot.reply_to(message, f"‚úÖ Virtual Host untuk domain `{domain}` berhasil ditambahkan dan diaktifkan!", parse_mode="Markdown")
    except Exception as e:
        bot.reply_to(message, f"‚ö† Gagal menambahkan Virtual Host: {e}")
```

---

### **3. Mengaktifkan dan Menonaktifkan Virtual Host**
Fitur ini akan mengaktifkan (symlink ke `sites-enabled`) atau menonaktifkan (hapus symlink) Virtual Host.

#### **Kode**
Tambahkan handler untuk mengaktifkan dan menonaktifkan Virtual Host:
```python
@bot.message_handler(commands=['enable_vhost'])
def enable_vhost(message):
    bot.reply_to(message, "Silakan masukkan nama domain yang ingin diaktifkan:")

@bot.message_handler(commands=['disable_vhost'])
def disable_vhost(message):
    bot.reply_to(message, "Silakan masukkan nama domain yang ingin dinonaktifkan:")

@bot.message_handler(func=lambda message: message.text.endswith(".com") or message.text.endswith(".id"))
def toggle_vhost(message):
    try:
        domain = message.text.strip()
        available_path = f"/etc/nginx/sites-available/{domain}"
        enabled_path = f"/etc/nginx/sites-enabled/{domain}"
        
        if message.text.startswith("enable "):
            if not os.path.exists(enabled_path):
                os.symlink(available_path, enabled_path)
                os.system("sudo systemctl restart nginx")
                bot.reply_to(message, f"‚úÖ Virtual Host `{domain}` berhasil diaktifkan!")
            else:
                bot.reply_to(message, f"‚ö† Virtual Host `{domain}` sudah aktif.")
        
        elif message.text.startswith("disable "):
            if os.path.exists(enabled_path):
                os.unlink(enabled_path)
                os.system("sudo systemctl restart nginx")
                bot.reply_to(message, f"‚úÖ Virtual Host `{domain}` berhasil dinonaktifkan!")
            else:
                bot.reply_to(message, f"‚ö† Virtual Host `{domain}` sudah tidak aktif.")
        else:
            bot.reply_to(message, "‚ö† Perintah tidak dikenali. Gunakan /enable_vhost atau /disable_vhost.")
    except Exception as e:
        bot.reply_to(message, f"‚ö† Terjadi kesalahan: {e}")
```

---

### **4. Cara Penggunaan**
#### Menambahkan Virtual Host Baru
1. Kirim perintah:
   ```
   /add_vhost
   ```
2. Masukkan detail dalam format:
   ```
   app1.example.com /var/www/app1
   ```

#### Mengaktifkan Virtual Host
1. Kirim perintah:
   ```
   /enable_vhost
   ```
2. Masukkan nama domain:
   ```
   app1.example.com
   ```

#### Menonaktifkan Virtual Host
1. Kirim perintah:
   ```
   /disable_vhost
   ```
2. Masukkan nama domain:
   ```
   app1.example.com
   ```

---

### **5. Validasi dan Debugging**
- Pastikan file konfigurasi Virtual Host valid:
  ```bash
  sudo nginx -t
  ```
- Periksa log error Nginx jika ada masalah:
  ```bash
  sudo tail -n 20 /var/log/nginx/error.log
  ```

---

### **6. Output**
- Jika berhasil, bot akan merespons:
  ```
  ‚úÖ Virtual Host untuk domain `app1.example.com` berhasil ditambahkan dan diaktifkan!
  ```
- Jika gagal, bot akan memberikan pesan error yang spesifik.

---

Jika ada fitur tambahan yang ingin ditambahkan, beri tahu saya! üòä